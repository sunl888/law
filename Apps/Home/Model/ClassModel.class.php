<?php
namespace Home\Model;
use Think\Model;

class ClassModel extends Model{

    protected $tableName = 'class';
    protected static $parents = [];

	//返回指定ID对应的所有子栏目
	public function getChildClass($id) {

		$classIdArr = array();
		$condition['father_id'] = $id;
		$classArr = $this->where($condition)->select();

		foreach ($classArr as $k=>$v) {
			$classIdArr[] = $v['class_id'];
		}

		if (empty($classIdArr)) {
			$classIdArr[] = $id;	
		}
		return $classIdArr;
	}

    public function getNav()
    {
        $condition['is_show'] = 1;
        $condition['is_nav'] = 1;
        return $this->where($condition)
            ->order('sort_index asc')
            ->alias('c')
            ->join("__TEMPLATE__ t ON c.index_template = t.template_id")
            ->field('c.class_id,c.father_id,c.name as class_name,t.type,c.channel_id,t.url,c.content_template,c.index_template,t.template_id,t.name as template_name')
            ->select();
     }
    /**
     * 获取所有的父级栏目
     * @return array
     */
	public function getParents(){
        if(count(self::$parents)<=0){
            //todo ['is_nav'=>1]
            self::$parents = $this->where([['father_id'=>0],['is_show'=>1]])->order('sort_index desc')->select();
        }
        return self::$parents;
    }

	public function getChildClassArr($id) {
		$condition['father_id'] = $id;
		$classArr = $this->where($condition)->select();
		return $classArr;
	}
	/*public function scope($scope = '', $args = NULL)
    {
        return parent::scope($scope, $args); // TODO: Change the autogenerated stub
    }*/

}